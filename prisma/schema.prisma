// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex", "relationJoins"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  username  String @unique
  email String @unique
  password String @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user_roles user_roles[]
}

model role {
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  guard Boolean? @db.TinyInt @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user_roles user_roles[]
}

model plp {
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  
  school school[]
  plp_school_year plp_school_year[]
}

model school {
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  plp_id Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  plp plp @relation(fields: [plp_id], references: [id], map: "school_plp_id_fkey")
}

model school_year {
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  plp_school_year plp_school_year[]
}

model user_roles {
  id Int @id @default(autoincrement())
  user_id Int
  role_id Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  role role @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  user user @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model plp_school_year {
  id Int @id @default(autoincrement())
  plp_id Int
  school_year_id Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  plp plp @relation(fields: [plp_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  school_year school_year @relation(fields: [school_year_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}